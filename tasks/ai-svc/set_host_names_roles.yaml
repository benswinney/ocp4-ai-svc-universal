---

- name: Set appropriate next steps
  ansible.builtin.set_fact:
    valid_next_steps:
      - insufficient
      - ready
      - pending-for-input
      - adding-hosts

- name: Ensure the cluster is in a valid state to set names and roles
  ansible.builtin.uri:
    headers: "{{ compiled_uri_headers }}"
    url: "{{ assisted_service_endpoint }}/clusters/{{ cluster_id }}"
    return_content: true
    method: GET
    status_code: 200
    body_format: json
  register: cluster_current_status
  retries: 5
  delay: 30
  until: cluster_current_status.json is defined

- name: Set the Host names and roles
  when: cluster_current_status.json.status in valid_next_steps
  block:

    - name: Pause for 5 seconds to let the API catch up
      ansible.builtin.wait_for:
        timeout: 5

    - name: Get the list of hosts from the API
      ansible.builtin.uri:
        headers: "{{ compiled_uri_headers }}"
        url: "{{ assisted_service_endpoint }}/infra-envs/{{ infraenv_id }}/hosts"
        return_content: true
        method: GET
        status_code: 200
      register: ai_svc_list_of_hosts

    - name: Template out new v2 api map
      ansible.builtin.template:
        src: templates/v2_host_roles_names_map.json.j2
        dest: "{{ generated_asset_directory }}/{{ cluster_id }}/v2_host_roles_names_map.json"
        mode: '0644'

    - name: Set template fact
      ansible.builtin.set_fact:
        v2_host_roles_names_map: "{{ lookup('ansible.builtin.template', 'templates/v2_host_roles_names_map.json.j2') }}"

    - name: Set the hostnames of the nodes
      ansible.builtin.uri:
        headers: "{{ compiled_uri_headers }}"
        url: "{{ assisted_service_endpoint }}/infra-envs/{{ infraenv_id }}/hosts/{{ host_item.id }}"
        return_content: true
        method: PATCH
        body: "{\"host_name\": \"{{ host_item.hostname }}\"}"
        status_code: 201
        body_format: json
      loop: "{{ v2_host_roles_names_map }}"
      loop_control:
        loop_var: host_item
      retries: 5

    - name: Set the host roles of the nodes
      when: cluster_type == "Standard"
      ansible.builtin.uri:
        headers: "{{ compiled_uri_headers }}"
        url: "{{ assisted_service_endpoint }}/infra-envs/{{ infraenv_id }}/hosts/{{ host_item.id }}"
        return_content: true
        method: PATCH
        body: "{\"host_role\": \"{{ host_item.role }}\"}"
        status_code: 201
        body_format: json
      loop: "{{ v2_host_roles_names_map }}"
      loop_control:
        loop_var: host_item
      retries: 5

    - name: Pause for 5 seconds to let the API catch up
      ansible.builtin.wait_for:
        timeout: 5
